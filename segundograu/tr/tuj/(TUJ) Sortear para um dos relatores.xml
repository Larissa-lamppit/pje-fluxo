<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(TUJ) Sortear para um dos relatores">
    <description><![CDATA[Código do fluxo: TUJ_SORT_RELAT

Descrição: Fluxo destinado ao recebimento dos processos após o sorteio de relatores.

Raia        Localização     Papel
Secretaria  Secretaria TUJ  Chefe de secretaria]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (TUJ) Sortear para um dos relatores">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10265:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="secretaria" priority="3"/>
        <transition to="(TUJ) Sortear para um dos relatores" name="(TUJ) Sortear para um dos relatores"/>
    </start-state>  
    <!-- NODES -->
    <node name="(TUJ) Sortear para um dos relatores">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoTrfRedistribuicaoHome.carregarTipoDistribuicaoProcesso()}"/>
            <action expression="#{processoTrfRedistribuicaoHome.gravarRedistribuicaoImpedimentoRelatorTUJ()}"/>
            <action expression="#{preencherMovimento.deCodigo(26).comComplementoDeCodigo(2).doTipoDominio().preencherComElementoDeCodigo(2).lancarMovimento()}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (TUJ) Sortear para um dos relatores">
        <task name="Nó de Desvio - (TUJ) Sortear para um dos relatores" swimlane="Nó de Desvio - (TUJ) Sortear para um dos relatores" priority="3"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
