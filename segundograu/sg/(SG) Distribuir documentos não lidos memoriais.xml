<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Distribuir documentos não lidos memoriais"> 
    <!-- SWIMLANES -->
    <swimlane name="solicitante">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (SG) Distribuir documentos não lidos memoriais">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('602:1338,1342:1469')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="solicitante" priority="3"/>
        <transition to="(SG) Processo pautado?" name="(SG) Processo pautado?"/>
    </start-state>  
    <!-- NODES -->
    <end-state name="Término"/>
    <decision expression="#{processoJudicialManager.findById(processInstance.contextInstance.getVariable('processo')).selecionadoPauta and not empty sessaoProcessoDocumentoManager.recuperaElementosJulgamento(processoJudicialManager.findById(processInstance.contextInstance.getVariable('processo')), null, authenticator.getOrgaoJulgadorAtual(), false, false) and sessaoProcessoDocumentoManager.recuperaElementosJulgamento(processoJudicialManager.findById(processInstance.contextInstance.getVariable('processo')), null, authenticator.getOrgaoJulgadorAtual(), false, false).get(0).sessao.dataFechamentoPauta != null ? '(SG) Distribuir memoriais órgãos julgadores' : '(SG) Fluxo documentos não lidos' }" name="(SG) Processo pautado?">
        <transition to="(SG) Distribuir memoriais órgãos julgadores" name="(SG) Distribuir memoriais órgãos julgadores"/>
        <transition to="(SG) Fluxo documentos não lidos" name="(SG) Fluxo documentos não lidos"/>
    </decision>
    <process-state name="(SG) Fluxo memorial">
        <sub-process name="(SG) Análise de documentos não lidos memoriais" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <node name="(SG) Distribuir memoriais órgãos julgadores">
        <transition to="(SG) Fluxo memorial" name="(SG) Fluxo memorial"/>
        <event type="node-enter">
            <action expression="#{sessaoJulgamentoServiceCNJ.criarFluxoDemaisJulgadores(tramitacaoProcessualService.recuperaProcesso(),'SG_ADOCNLIDOM')}"/>
        </event>
    </node>
    <process-state name="(SG) Fluxo documentos não lidos">
        <sub-process name="(SG) Análise de documentos não lidos" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Distribuir documentos não lidos memoriais">
        <task name="Nó de Desvio - (SG) Distribuir documentos não lidos memoriais" swimlane="Nó de Desvio - (SG) Distribuir documentos não lidos memoriais" priority="3"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
